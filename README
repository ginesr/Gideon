Don't try to use Gideon just yet, is not even an alpha version 
--------------------------------------------------------------------------------

Its purpose is to provide persistence using Moose-type objects without 
worrying about storage format.
Goal is to store objects without changing their class definitions, 
no schemas required just plain Perl classes with Mouse::Meta::Attribute::Custom 
extensions. It doesn't. provide joins between two objects right now.

my $dbh = DBI->connect( "dbi:mysql:database=test;host=;port=", "test", "" );

Gideon->register_store( 'mysql_server', $dbh );

or

Gideon->register_store( 'mysql_server', MyApp::Driver::MySQL->new(
    db       => 'test',
    username => 'test',
    host     => 'localhost'
));

then

my $results = MyApp::Persons->find_all( name => { like => 'Doe' } );

CURRENT ENGINES SUPPORTED

-DBI
 - MySQL
 - SQLIte
-Storable (veeery basic)
-MongoDB

DEPENDENCIES

-Mouse
-Try::Tiny
-Set::Array
-DBI
-SQL::Abstract
-Test::Exception
-Test::More
-Data::Dumper
